@model PagedList.IPagedList<GFTTest.Models.Client>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Clients", FormMethod.Get))
{
    <div class="form-horizontal">
        
        <div class="form-group">
            @Html.Label("lblSearch", "Search", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
               @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "control-label col-md-12" })
            </div>
            @Html.Label("Id_Client_Type", "Client Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("IdClientTypeFilter", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.FirstOrDefault().Id_Client_Type, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-2">
                <input type="submit" value="Search" />
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Birth_Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Client_Type.Type_Name)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Birth_Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Client_Type.Type_Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id_Client }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id_Client }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id_Client })
        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))
